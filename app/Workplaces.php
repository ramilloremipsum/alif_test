<?php

namespace App;


use App\Exceptions\BoxAlreadyExistsInWorkplace;
use App\Helpers\Amate;
use App\Http\Requests\CreateBoxesInWorkplaceRequest;
use Illuminate\Database\Eloquent\Model;

class Workplaces extends Model
{
    protected $table = 'workplaces';
    protected $fillable = ['title', 'description'];


    public function createBoxes(CreateBoxesInWorkplaceRequest $request)
    {
        $existed_titles_arr = $this->boxes->pluck('title')->toArray();
        $num = 1;
        for ($i = 1; $i <= $request->get('quantity'); $i++) {
            $box = new Boxes();
            $box->workplace_id = $this->id;
            if (!in_array($num, $existed_titles_arr)) {
                $box->title = $num;
            } else {
                while (in_array($num, $existed_titles_arr)) {
                    $num++;
                }
                $box->title = $num;
            }
            $box->save();
            $num++;
        }
    }

    public function hasBoxes()
    {
        return count($this->boxes) > 0;
    }

    public function update(array $attributes = [], array $options = [])
    {
        return parent::update($attributes, $options); // TODO: Change the autogenerated stub
    }

    public function boxAlreadyExists($title)
    {
        return Boxes::query()->where('title', '=', $title)->where('workplace_id', '=', $this->id)->first();
    }

    public function boxes()
    {
        return $this->hasMany('App\Boxes', 'workplace_id', 'id');
    }
}
